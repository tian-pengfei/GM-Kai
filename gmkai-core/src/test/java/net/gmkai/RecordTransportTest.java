package net.gmkai;

import net.gmkai.crypto.BulkCipherAlg;
import net.gmkai.crypto.MacAlg;
import net.gmkai.crypto.TLSCrypto;
import net.gmkai.crypto.TLSCryptoParameters;
import net.gmkai.crypto.impl.bc.BcTLSCrypto;
import net.gmkai.util.Bytes;
import net.gmkai.util.Hexs;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;

public class RecordTransportTest {

    private static final TLSCrypto tlsCrypto = new BcTLSCrypto();

    private static final byte[] handshakeData = Hexs.decode("0100002b0101e268eeffe79d21362ef82c7db4fc01d6d13766832be1f9210f45f56c992015ee000004e013e0110100");

    private static final byte[] handshakeRecord = Hexs.decode("160101002f0100002b0101e268eeffe79d21362ef82c7db4fc01d6d13766832be1f9210f45f56c992015ee000004e013e0110100");

    private static final byte[] sentFinishData = Hexs.decode("1400000c6532dca5ea8aadc0351f2776");

    private static final byte[] sentFinishRecord = Hexs.decode("1601010050f2f24566cce2405f12c507501526a560f6dd4d38dabb384dfa01a99f80c60b94aceaeded97ccae45273a51e4e434a4fbb54b6b2b284d309962169f62caa0d044070e72b00aa9944531fbfb86aa198f17");

    private static final byte[] revFinishData = Hexs.decode("1400000c636f5868a833c86cc18ff3c0");

    private static final byte[] revFinishRecord = Hexs.decode("16010100501ea63b13612f266e533748fda1c425b80e68397f0aa85cba821ce84314b6d140ba76cef683ad6472377a07740033113a0d1cda6145cd3b41bc71b4bf88bdaa05ebc08a76d0ed5b51ba61da52654c38e3");
//    byte[] AlertData = ;
//
//    byte[] AlertRecordData = ;
//
//    byte[] ApplicaitonData = ;
//
//    byte[] ApplicationRecordData = ;


    private static final TLSCryptoParameters parameters = TLSCryptoParameters.TLSCryptoParametersBuilder.aTLSCryptoParameters()
            .withSelfCryptoKey(Hexs.decode("533aaf2ef3292c54c85ed5cb8ae0d249"))
            .withSelfCryptoKeyIv(Hexs.decode("50d2cf238c7810793342a5013dc82f9a"))
            .withSelfMacKey(Hexs.decode("3e9f03413b91a8adf6519365490079a000d2dd4a052005853adf7fe7041ce13d"))
            .withPeerCryptoKey(Hexs.decode("8c06a8e3e890f677703956904453b386"))
            .withPeerCryptoIv(Hexs.decode("871d2a1206d7a3e6e83fb238f5c95552"))
            .withPeerMackey(Hexs.decode("3be723bff1b758ec8335ea3ff988f43c5a9f194ca12560f9a52e6010f370fb57"))
            .withBulkCipherAlg(BulkCipherAlg.SM4_CBC)
            .withMacAlg(MacAlg.M_SM3)
            .build();

    private static final byte[] sentApplicationData = ("GET / HTTP/1.1\r\n" +
            "User-Agent: Java/1.8.0_221\r\n" +
            "Host: ebssec.boc.cn\r\n" +
            "Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\r\n" +
            "Connection: keep-alive\r\n" +
            "\r\n" +

            .getBytes();


    private static final byte[] sentApplicationRecord = Hexs.decode("");

    private static final byte[] revApplicationData = ("HTTP/1.1 200 OK\r\n" +
            "Date: Mon, 05 Sep 2022 01:26:23 GMT\r\n" +
            "Last-Modified: Sat, 27 Jun 2015 16:48:38 GMT\r\n" +
            "Accept-Ranges: bytes\r\n" +
            "Content-Length: 156\r\n" +
            "Cache-Control: max-age=300\r\n" +
            "Expires: Mon, 05 Sep 2022 01:31:23 GMT\r\n" +
            "Vary: Accept-Encoding,User-Agent\r\n" +
            "Keep-Alive: timeout=10, max=100\r\n" +
            "Connection: Keep-Alive\r\n" +
            "Content-Type: text/html\r\n" +
            "\r\n" +
            "<!DOCTYPE html><html><head><meta http-equiv=\"refresh\" content=\"0;url=/boc15/login.html\"><meta name=\"renderer\" content=\"ie-stand\"></head><body></body></html>")
            .getBytes(StandardCharsets.UTF_8);

    private static final byte[] revApplicationRecord = Hexs.decode("1701010220e9cb33bfb5d6f1e3e8c6f423397ef4e83d50d0e4fe821568f6344c3c9f80c086b5869c77c79528ebbdbd5414a9e8b80e54e6092037c4328fdbfd59f7a437ce1ad34db234b618a9a75de7de60cd96bf5e9919bba723109e7a8cdf9724b3184ae15090d11b8dfe9adccf6dfd99859f90b5feb667d0a8464e3c8ae8b9ab0d169c6ec0bbe771a3db884889f3cf0ca507f7b2a73a69105b0efbc5128a7fb0b1d3b44b48dcedc0f0657900e68bf5534b6c4bc1f404da4172f89a906e7d07bd3628f9c51513434039a3d83414cf0ccb61e253fb63a71c6c39c0c950f6caa9dea7af46a173d6222aaaa910c83f5e0194bf929f56f85afd042860e12711b46b76b3980ff8c052e93fe1af78fb7e5a2a9895ec165d41a45e16313048f81588e1e69f383a33d5c883693b123389d4e23ae92654935a2afb2f2e1ffcdfb1ac178054a8ebf177526088d2c0a729ff6059f43537529595a24d8a30e6c2b7123f8c47b82a838f99f5a62cd532fa927a5672689595833f4861b813b72f7dfdb2d9797cc4c411950e3ef6f746fe03a08598813cc823dba0fd89e3e86b8ad3829ba2a4c162a0b749102f045118ec33c57fd4ced50b9b00eb29dfd2136e5bce248393646d412ffc4f305a3bd9bba119a8680ca034a77485d6efbd952c318dd96218a280c9f4ca78de1df8a9c52539100c514f61be75500836c930aab5e355b8837ba70f364e23002752a11555c293d272650c5e2c8eb6509983f6e87537e0a466419eef8f62dd32fc4b");


    @Test
    public void should_read_handshake_msg() throws IOException {

        ByteArrayInputStream inputStream = new ByteArrayInputStream(handshakeRecord);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        RecordTransport recordTransport = new RecordTransport(tlsCrypto, inputStream, outputStream);

        HandshakeMsg handshakeMsg = recordTransport.readHandshakeMsg();

        assertThat(handshakeMsg.getMsg(), is(handshakeData));
    }

    @Test
    public void should_read_handshake_msg_after_update_cipher() throws IOException {
        ByteArrayInputStream inputStream = new ByteArrayInputStream(revFinishRecord);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        RecordTransport recordTransport = new RecordTransport(tlsCrypto, inputStream, outputStream);
        recordTransport.updateCryptoParameters(parameters);
        recordTransport.updateReadCipher();

        HandshakeMsg handshakeMsg = recordTransport.readHandshakeMsg();

        assertThat(handshakeMsg.getMsg(), is(revFinishData));

    }

    @Test
    public void should_write_handshake_msg() throws IOException {

        ByteArrayInputStream inputStream = new ByteArrayInputStream(new byte[0]);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        RecordTransport recordTransport = new RecordTransport(tlsCrypto, inputStream, outputStream);

        recordTransport.writeHandshakeMsg(HandshakeMsg.getInstance(handshakeData));

        assertThat(outputStream.toByteArray(), is(handshakeRecord));
    }

    @Test
    public void should_write_handshake_msg_after_update_cipher() throws IOException {

        ByteArrayInputStream inputStream = new ByteArrayInputStream(new byte[0]);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        RecordTransport recordTransport = new RecordTransport(tlsCrypto, inputStream, outputStream);
        recordTransport.updateCryptoParameters(parameters);
        recordTransport.updateWriteCipher();

        recordTransport.writeHandshakeMsg(HandshakeMsg.getInstance(sentFinishData));
        assertThat(outputStream.toByteArray(), is(sentFinishRecord));

    }

    @Test
    public void should_write_application_msg_after_update_cipher() throws IOException {

        ByteArrayInputStream inputStream = new ByteArrayInputStream(new byte[0]);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        RecordTransport recordTransport = new RecordTransport(tlsCrypto, inputStream, outputStream);
        recordTransport.updateCryptoParameters(parameters);
        recordTransport.updateWriteCipher();
        recordTransport.writeHandshakeMsg(HandshakeMsg.getInstance(sentFinishData));
        assertThat(outputStream.toByteArray(), is(sentFinishRecord));
        outputStream.reset();

        recordTransport.writeApplicationMsg(sentApplicationData);
        assertThat(outputStream.toByteArray(), is(sentApplicationRecord));

    }

    @Test
    public void should_read_application_msg_after_update_cipher() throws IOException {

        ByteArrayInputStream inputStream =
                new ByteArrayInputStream(Bytes.concat(revFinishRecord, revApplicationRecord));
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        RecordTransport recordTransport = new RecordTransport(tlsCrypto, inputStream, outputStream);
        recordTransport.updateCryptoParameters(parameters);
        recordTransport.updateReadCipher();

        recordTransport.readHandshakeMsg();
        TLSText tlsText = recordTransport.readApplicationMsg();

        assertThat(tlsText.contentType, is(ContentType.APPLICATION_DATA));
        assertThat(tlsText.fragment, is(revApplicationData));
    }


}
